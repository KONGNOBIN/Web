/*
    ■ 요소 선택자

    h1 {color: red;}
    h2 {color: red;}
    h3 {color: red;}

    h1, h2, h3 {color: red;}

    h1, h2, h3{color: rgb(243, 147, 147); font-size: 2em; background-color: whitesmoke;}

*/
h3.title {color:rgb(29, 29, 29);}

/*
    ■ class 선택자

    .className {font-size:30px}
    .className1.className2 {font-size:30px}   <다중클래스>
*/
.html 
{
    color: purple;    
}
.css
{
    text-decoration: underline;
}
.html.css
{
    border: 1px solid;
}

/*
    ■ ID 선택자

    #IDName {font-size:30px}

    ★ class 선택자와의 차이점 ★
    id는 유일한 요소에 사용 (단 하나)
*/
#id-selector
{
    font-size: 30px;
}
  


/*
    ■ 단순 속성값으로 선택

    p[class] {color: red;}
    p[class][id] {text-decoration: underline;}
*/

/*
    ■ 정확한 속성값으로 선택
    
    p[class="foo"] {color: red;}
    p[id="title"] {text-decoration: underline;}
*/

/*
    ■ 부분 속성값으로 선택

    p[class~="color"] : 공백으로 구분되어 있는 class 적용
    p[class^="color"] : color로 시작하는 class만 적용
    p[class$="color"] : color로 끝나는 class만 적용
    p[class*="color"] : color가 포함된 시작하는 class만 적용
*/
/* p[class~="color"] {font-style: italic;} */
/* p[class^="color"] {font-style: italic;} */
/* p[class$="color"] {font-style: italic;} */
/* [class*="color"] {font-style: italic;} */

/*
    자손 선택자
*/
 div span {color: orange;} 

/*
    자식 선택자
*/
div>span {color: blue;} 

/*
    인접 형제 선택자
*/
div + span {color: red;}

/*
    조합해서 사용
    body요소의 자식인 div요소의 자손인 span 요소 바로 뒤에 인접한 h1요소 선택 
*/
body > div span + h4 {color: rgb(42, 165, 63);}



/*
    ■ 가상 class 사용    
*/
/* 문서구조 */
li:first-child {color:red;}
li:last-child {color:blue;}

/* 링크 */
a:link{color:blue;}                /* 하이퍼 링크이면서 아직 방문하지 않은 앵커 */
a:visited{color:red;}              /* 이미 방문한 하이퍼링크를 의미 */

/* 사용자 동작 */
a:focus {background-color:yellow;} /* 현재 입력 포커스를 갖고있는 요소에 적용 */
a:hover {font-weight: bold;}         /* 마우스 포인터가 있는 요소에 적용 */
a:active {color:red;}              /* 사용자 입력으로 활성화된 요소에 적용 */

/*
    ■ 가상 요소
*/ 
p.virtual:before { content: "앞앞"; color:blueviolet}  /* 가장 앞에 요소를 삽입 */
p:after { content: "뒤뒤"; color:forestgreen }         /* 가장 뒤에 요소를 삽입 */
p:first-line { color:red; }                            /* 요소의 첫 번째 줄에 있는 텍스트 */
p:first-letter { color:blue; }                         /* 블록 레벨 요소의 첫 번째 문자 */

/*
    ■ 구체성
    1,0,0,0 : Inline style
    0,1,0,0 : ID
    0,0,1,0 : CLASS, 기타, 가상
    0,0,0,1 : 모든요소, 가상요소
    0,0,0,0 : 전체 선택자
    조합자(>, + 등) 구체성 값 없음

    h1{} : 0,0,0,1
    body h1{} : 0,0,0,2
    .grape{} : 0,0,1,0
    *.bright{} : 0,0,1,0
    p.bright em.dark{} : 0,0,2,2
    #page {} : 0,1,0,0
    div#page {} : 0,1,0,1 
    h1.check {... !IMPORTANT} : 0,0,1,1    <-- 제일 우선권을 가짐

    !IMPORTANT : 모든 구체성을 무시하고 우선권을 가짐
*/ 

/*
    ■ 상속
    상속된 값에는 아무런 구체성이 없다, 심지어 0,0,0,0도 아니다. --무슨소리지..?
*/
h1.inherit {color:gray}

h1>em {color:rgb(0, 255, 106)}
h1#inherit {color:gray}


/*
    ■ 캐스케이드
    [규칙]
     1. 중요도, 출처
        -- 5. 사용자 에이전트 스타일
           4. 사용자 스타일
           3. 제작자 스타일
           2. 제작자 !IMPORTANT 스타일
           1. 사용자 !IMPORTANT 스타일
     2. 구체성
     3. 선언순서

*/